# If you're adding a new package, you'll need to duplicate this workflow for it.
name: wasm-splats CI
on:
  push:
    paths:
      - 'wasm-splats/**'
      - '.github/workflows/wasm-splats-ci.yml'

jobs:
  test_and_lint:
    name: Testing and Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install latest stable with wasm32-unknown-unknown
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          target: wasm32-unknown-unknown
          components: rustfmt, clippy

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Run rustfmt
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -Dwarnings

      - name: Run wasm-splats tests
        run: wasm-pack test --headless --chrome --firefox
        working-directory: ./wasm-splats

  # TODO: Move this to a wasm-splats-deploy.yml file.
  pack:
    name: Packaging for npm
    runs-on: ubuntu-latest
    needs: [ test_and_lint ]
    steps:
      - uses: actions/checkout@v2

      - name: Install latest stable with wasm32-unknown-unknown
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          target: wasm32-unknown-unknown
          components: rustfmt, clippy

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Package wasm-splats
        run: wasm-pack build ./wasm-splats --target web --out-dir ./wasm-splats/pkg

      ## TODO: Save artifacts to AWS.
